{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21658\\\\Desktop\\\\profolio\\\\memories app\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockOutLinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport { useDispatch } from 'react-redux';\nimport { signin, sighnup } from '../..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {}\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Sign In was uncsuccessful. Try Again Later\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutLinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 5\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"734195354073-g07l5pbe5ii15sovesoi6tdrk0ns6ead.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 155\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : \" Don't have an account? Sign Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"LeHukwrPx1v+UuvFRa7p6+Y/esw=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/21658/Desktop/profolio/memories app/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutLinedIcon","useStyles","Input","useHistory","GoogleLogin","Icon","useDispatch","signin","sighnup","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","signup","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","googleFailure","console","log","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Avatar, Button , Paper, Grid, Typography, Container } from '@material-ui/core'\r\nimport LockOutLinedIcon from '@material-ui/icons/LockOutlined'\r\nimport useStyles from './styles'\r\nimport Input from './Input'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport Icon from './Icon'\r\nimport { useDispatch } from 'react-redux'\r\nimport { signin, sighnup } from '../..'\r\n\r\nconst initialState= {firstName:'', lastName:'', email:'', password:'', confirmPassword: ''}\r\n\r\nconst Auth = () => {\r\n    const classes=useStyles()\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [isSignup, setIsSignup] = useState(false)\r\n    const [ formData, setFormData ] = useState(initialState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword)=> !prevShowPassword )\r\n\r\n    const handleSubmit =(e)=> {\r\n        e.preventDefault()\r\n\r\n        if(isSignup) {\r\n            dispatch(signup(formData, history))\r\n        } else {\r\n            dispatch(signin(formData, history))\r\n        }\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup)=>!prevIsSignup)\r\n        handleShowPassword(false)\r\n    }\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj\r\n        const token = res?.tokenId\r\n\r\n        try {\r\n            dispatch({ type: 'AUTH', data: { result, token } })\r\n\r\n            history.push('/')\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n    const googleFailure=(error)=>{\r\n        console.log(error)\r\n        console.log(\"Google Sign In was uncsuccessful. Try Again Later\")\r\n    }\r\n    \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" > \r\n    <Paper className={classes.paper} elevation={3} >\r\n    <Avatar className={classes.avatar} >\r\n    <LockOutLinedIcon />\r\n    </Avatar>\r\n    <Typography variant=\"h5\" >\r\n    { isSignup ? 'Sign Up' : 'Sign In' }\r\n    </Typography>\r\n    <form className={classes.form} onSubmit={handleSubmit} >\r\n    <Grid container spacing={2} >\r\n    {\r\n        isSignup && (\r\n            <>\r\n                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange}  half />\r\n\r\n            </>\r\n        )\r\n    }\r\n    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n    <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={ showPassword ? \"text\" : \"password\" } handleShowPassword={handleShowPassword} />\r\n    { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n    </Grid>\r\n    \r\n    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} > \r\n       {\r\n           isSignup ? 'Sign Up':'Sign In'\r\n       }\r\n     </Button>\r\n     <GoogleLogin\r\n            clientId=\"734195354073-g07l5pbe5ii15sovesoi6tdrk0ns6ead.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                Google Sign In\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n     <Grid container justify=\"flex-end\" >\r\n     <Grid item>\r\n         <Button onClick={switchMode}>\r\n             { isSignup ? 'Already have an account? Sign In': \" Don't have an account? Sign Up \" }\r\n         </Button>\r\n     </Grid>\r\n     </Grid>\r\n    </form>\r\n    </Paper>\r\n     </Container>\r\n  )\r\n}\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}