{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21658\\\\Desktop\\\\profolio\\\\memories app\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"HA1fI8UqKEu5E4JvhBNuhEB0UmQ=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/21658/Desktop/profolio/memories app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport useStyles from './styles'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({\r\n        creator: '', title: '',message: '',tags: '',selectedFile: ''\r\n    })\r\n    const post=useSelector((state)=>currentId ? state.posts.find((p)=> p._id === currentId) :null )\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=> {\r\n        if(post) setPostData(post)\r\n    }, [post] )\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(currentId) {\r\n            dispatch(updatePost( currentId ,postData))\r\n            \r\n        } else {\r\n            dispatch(createPost(postData))\r\n            \r\n        }\r\n        clear()\r\n\r\n    }\r\n    const clear =()=>{\r\n        setCurrentId(null)\r\n        setPostData({\r\n            creator: '', title: '',message: '',tags: '',selectedFile: ''\r\n\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n    \r\n            <Typography variant='h6'> {currentId ? 'Editing' : 'Creating' } a Memory</Typography>\r\n            <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} \r\n            onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n            \r\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} \r\n            onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n\r\n<TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4}  value={postData.message} \r\nonChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n\r\n\r\n\r\n<TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} \r\nonChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})} />\r\n\r\n<div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n\r\n\r\n<Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      \r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}